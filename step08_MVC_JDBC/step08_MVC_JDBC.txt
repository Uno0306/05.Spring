step08_MVC_JDBC

[학습]
1. MyBatis
	- JDBC를 통해 DB에 접근하는 작업을 캡슐화
	- 일반 SQL 쿼리, 프로시저 등의 고급 매핑을 지원하는 프레임워크
	- 프로그램 소스크도와 SQL 쿼리가 분리 - 유지보수 및 간결성 향상
	
2. REST[Representational State Transfer]
	- 웹에서 데이터를 전송하고 처리하는 방법을 정의한 인터페이스
	- HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시
	- HTTP Method를 통해 해당 자원에 대한 CRUD Operation을 적용
	- Resource 중심의 설계 아키텍쳐
	
	- 메소드
		- POST : 데이터 생성(Create)
		- GET : 데이터 조회(Select)
		- PUT : 데이터 수정(Update)
		- DELETE : 데이터 삭제(Delete)
	
	- 구성
		- 자원(Resource) - URI
		- 행위 (Verb) - HTTP Method
		- 표현 (Representations)
		
	- 규칙
		- 소문자 사용(대소문자 구분)
		- Hyphen (-) 사용 
		- 공백 제거
		- CRUD 포함 x
			ex) id 번호가 7번인 책을 삭제하겠다.
				- /book/delete/7 ->  DELETE : /book/7
		- / : 계층 관계
			ex) http://study.spring.com/part/(x) : 마지막에는 /를 붙이지 않는다.
		
	- HTTP Status Code : https://developer.mozilla.org/ko/docs/Web/HTTP/Status
		- 200 : OK, ...
		
	- HATEOS[Hypermedia As The Of Engine Application State]
		- REST API에 대한 결과 정보
		
		
	- REST API를 왜 사용할까???
	
	
	